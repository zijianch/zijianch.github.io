# jemdoc: menu{MENU_sws}{ants.html},analytics{UA-252546838-1}
= A Quick Guide to ANTs

== Installation on macOS

Before running the following commands, you should have XCode and CMake installed. For detail requirements, see this [https://github.com/ANTsX/ANTs/wiki/Compiling-ANTs-on-Linux-and-Mac-OS official tutorial]

=== Step 1: Download the latest code 

My path is set to +\/Users\/zijianchen\/Downloads+. 
~~~
{}{}
cd Downloads
git clone https://github.com/ANTsX/ANTs.git
~~~
This will create a folder called +Downloads\/ANTs+.

=== Step 2: Configuration

Create the +\/Downloads\/build+ and +\/Downloads\/install+ folder:
~~~
{}{}
mkdir build install
~~~

Open configuration panel:
~~~
{}{}
cd build
ccmake ../ANTs
~~~

Press 'c' to do an initial configuration. There are three places you may need to modify:
- +CMAKE\_INSTALL\_PREFIX+: This is the path that you want to install ANTs. This is set to +\/opt\/ANTs+ by default. You may encounter some issues if you use this path (no access to write even with +sudo+). I set this to +\/Users\/zijianchen\/ants+ which works well.
- +RUN\_LONG\_TESTS+: set this to 'OFF'
- +RUN\_SHORT\_TESTS+: set this to 'OFF'

~~~
{}{img_left}{./figs/ants_install_1.png}{}{50%}{}{}
~~~

When you complete everything, press 'g'.

=== Step 3: Build and install

Build (this will create a subdirectory +\/Downloads\/build\/ANTS-build+ ):
~~~
{}{}
make 2>&1 | tee build.log
~~~

Install (This will copy the binaries and libraries to bin\/ and lib\/ under +CMAKE\_INSTALL\_PREFIX+ (which is set to be +\/Users\/zijianchen\/ants+ as mentioned previously).):
~~~
{}{}
cd ANTS-build
make install 2>&1 | tee install.log
~~~

=== Step 4: Set environment variables 

Run the following commands each time you initiate bash.
~~~
{}{}
export ANTSPATH=/Users/zijianchen/ants/bin
export PATH=${ANTSPATH}:$PATH
~~~

To check whether this worked correctly, type +which antsRegistration+, and it should return +\/Users\/zijianchen\/ants\/bin\/antsRegistration+.

Alternatively, if you want to configure this once and for all, add the above lines at the bottom of your +\~\/.bashrc+ (or +\~\/.bash\_profile+) file so that they will be executed each time you open bash. 

== Usage

You only need two commands to perform registration. Go into the folder that contains 
- target image ([files/MNI152_T1_2009c.nii MNI152\_T1\_2009c.nii], converted from [https://afni.nimh.nih.gov/pub/dist/atlases/MNI_HCP/MNI_Glasser_HCP_2019_v1.0/ HEAD/BRIK file from AFNI database])
- source image to be registered (I am using the sculp stripped verson of +sub-PA01\_ses-3TB1_acq-r10x10x10\_T1w\_defaced.nii+)

The first command is to generate the transformation matrix
~~~
{}{}
antsRegistrationSyN.sh -d 3 \
                       -o ./ants \
                       -f MNI152_T1_2009c.nii \
                       -m subj1_T1.nii
~~~

Parameters:
- +-d+: dimension of the image (for +.nii+ figures, the dimension is 3)
- +-o+: output file name prefix (all output file will look like +antsxxxxx+). 
- +-f+: the fixed image
- +-m+: the moving image

This step could take approximately 1 hour and should produce the following files (using 'ants' as the prefix):
- ants0GenericAffine.mat
- ants1InverseWarp.nii.gz
- ants1Warp.nii.gz
- antsInverseWarped.nii.gz
- antsWarped.nii.gz



The second command is to apply thr transformation:
~~~
{}{}
antsApplyTransforms -d 3 \
                    -i subj1_T1.nii \
                    -r MNI152_T1_2009c.nii \
                    -n GenericLabel[Linear] \
                    -t ./ants1Warp.nii.gz -t ./ants0GenericAffine.mat \
                    -o ./sub_to_MNI152.nii.gz
~~~

New parameters:
- +-i+: input images
- +-r+: reference image (target image)
- +-n+: interpolation options
- +-t+: transform file name. 

~~~
{}{img_left}{./figs/ants_demo_1.png}{}{50%}{}{}
~~~





 


